<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>OMW! Multiplayer</title>
    <!--style and socket library inclusions-->
    <link rel="stylesheet" href="/styles2.css"/>
    <script src="/socket.io/socket.io.js"></script>

  </head>
  <body>

    <button id="singlePlayerButton">Single Player</button>
    <button id="multiPlayerButton">Multiplayer</button>

    <!--Divisions to confirm whether a player has connected-->
    <div class="player p1">
      Player 1
      <div class="connected">Connected <span></span></div>
      <div class="ready">Ready <span></span></div>
    </div>
    <div class="player p2">
      Player 2
      <div class="connected">Connected <span></span></div>
      <div class="ready">Ready <span></span></div>
    </div>

    <div class="container">
        <div class="grid grid-user"></div>
        <div class="grid grid-computer"></div>
    </div>

    <!--Buttons for game control-->
    <div class="hidden-info">
      <button id="start">Start Game</button>
      <button id="rotate">Rotate Your Ships</button>
      <h3 id="whose-go">Your Go</h3>
      <h3 id="info"></h3>
    </div>

  </body>


  <!--Insert game and socket connection logic here-->
<script>
document.addEventListener('DOMContentLoaded', () => {
    const userGrid = document.querySelector('.grid-user')
    const computerGrid = document.querySelector('.grid-computer')
    const displayGrid = document.querySelector('.grid-display')
    const startButton = document.querySelector('#start')
    const turnDisplay = document.querySelector('#whose-go')
    const infoDisplay = document.querySelector('#info')
    const multiPlayerButton = document.querySelector('#multiPlayerButton')

    let isGameOver = false
    let currentPlayer = 'user'
    const width = 10
    let gameMode = ""
    let playerNum = 0
    let ready = false
    let enemyReady = false

  
    // Select Player Mode
    multiPlayerButton.addEventListener('click', startMultiPlayer)
  
    // Multiplayer
    function startMultiPlayer() {
      gameMode = 'multiPlayer'
  
      const socket = io();
  
      // Get your player number
      socket.on('player-number', num => {
        if (num === -1) {
          infoDisplay.innerHTML = "Sorry, the server is full"
        } else {
          playerNum = parseInt(num)
          if(playerNum === 1) currentPlayer = "enemy"
  
          console.log(playerNum)
  
          // Get other player status
          socket.emit('check-players')
        }
      })
  
      // Another player has connected or disconnected
      socket.on('player-connection', num => {
        console.log(`Player number ${num} has connected or disconnected`)
        playerConnectedOrDisconnected(num)
      })
  
      // On enemy ready
      socket.on('enemy-ready', num => {
        enemyReady = true
        playerReady(num)
        if (ready) playGameMulti(socket)
      })
  
      // Check player status
      socket.on('check-players', players => {
        players.forEach((p, i) => {
          if(p.connected) playerConnectedOrDisconnected(i)
          if(p.ready) {
            playerReady(i)
            if(i !== playerReady) enemyReady = true
          }
        })
      })
  
      // On Timeout
      socket.on('timeout', () => {
        infoDisplay.innerHTML = 'You have reached the 10 minute limit'
      })
  
      // Ready button click
      startButton.addEventListener('click', () => {
        if(allShipsPlaced) playGameMulti(socket)
        else infoDisplay.innerHTML = "Please place all ships"
      })
    
      function playerConnectedOrDisconnected(num) {
        let player = `.p${parseInt(num) + 1}`
        document.querySelector(`${player} .connected span`).classList.toggle('green')
        if(parseInt(num) === playerNum) document.querySelector(player).style.fontWeight = 'bold'
      }
    }

    //Create Board
    function createBoard(grid, squares) {
      for (let i = 0; i < width*width; i++) {
        const square = document.createElement('div')
        square.dataset.id = i
        grid.appendChild(square)
        squares.push(square)
      }
    }
    createBoard(userGrid, userSquares)
    createBoard(computerGrid, computerSquares)

    // Game Logic for MultiPlayer
    function playGameMulti(socket) {
      if(isGameOver) return
      if(!ready) {
        socket.emit('player-ready')
        ready = true
        playerReady(playerNum)
      }
  
      if(enemyReady) {
        if(currentPlayer === 'user') {
          turnDisplay.innerHTML = 'Your Go'
        }
        if(currentPlayer === 'enemy') {
          turnDisplay.innerHTML = "Enemy's Go"
        }
      }
    }
  
    function playerReady(num) {
      let player = `.p${parseInt(num) + 1}`
      document.querySelector(`${player} .ready span`).classList.toggle('green')
    }
  
    
  })
</script>

  
</html>